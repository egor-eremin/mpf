{"version":3,"sources":["components/co2-calculator/config.js","components/co2-calculator/co2-chart/CO2Chart.js","components/co2-calculator/co2-chart/index.js","components/co2-calculator/form-field-error/index.js","components/co2-calculator/form-field-error/FormFieldError.js","components/co2-calculator/step-provider/StepContentProvider.js","components/co2-calculator/step-provider/StepNavigationProvider.js","components/co2-calculator/calculator-model.js","components/co2-calculator/CO2Calculator.js","components/co2-calculator/index.js","components/app/App.js","AppConfig.js","index.js"],"names":["validators","required","value","validator","isEmpty","toString","isType","params","type","isNumeric","isPositive","isZero","isInt","isLength","isEmail","steps","defaultWidth","defaultHeight","brakePoint","desktopClass","mobileClass","chartConfig","labels","colors","borderWidth","measureUnit","labelsSettings","render","args","percentage","fontFamily","fontColor","fontSize","cutoutPercentage","legendSettings","display","factors","countries","buildingType","houseHeatingType","airConditioned","typeOfPersonalVehicle","publicTransportType","flights","takeoffLandingFactor","schema","Country","message","callback","BuildingType","HouseHeatingType","AirConditioned","TypeOfPersonalVehicle","AnnualMileage","min","max","PublicTransportCityDistance","PublicTransportCityQuantity","PublicTransportSubwayDistance","PublicTransportSubwayQuantity","PublicTransportShuttleDistance","PublicTransportShuttleQuantity","ShortFlightQuantity","MediumFlightQuantity","LongFlightQuantity","FullName","Email","services","formatNumber","number","replace","config","CO2Chart","CO2ChartRef","React","createRef","chart","_initChart","props","data","CO2Result","Chart","pluginService","register","_drawDonutText","top","middle","bottom","ctx","current","getContext","datasets","backgroundColor","borderColor","options","plugins","datalabels","_labelsFormater","scales","tooltips","callbacks","_tooltipCallbacks","legend","text","fontWeight","fontStyle","fillStyle","fillStyleClear","textBaseline","beforeDraw","getTextX","width","Math","round","measureText","height","restore","font","textValue","textValueX","textValueY","fillRect","fillText","textLabelTop","textLabelTopX","textLabelTopY","floor","textLabelBottom","textLabelBottomX","textLabelBottomY","save","label","tooltipItem","splitSymbol","dataLabel","index","datasetIndex","helpers","isArray","slice","formater","this","className","id","ref","map","idx","key","style","background","Component","FormFieldError","errors","name","FormHelperText","error","StepContentProvider","stepIndex","isDesktop","isEmailEnable","onChange","onBlur","values","touched","FormControl","fullWidth","InputLabel","htmlFor","Select","labelid","MenuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","e","country","MenuItem","button","Input","autoComplete","Fragment","StepNavigationProvider","next","prev","set","calcStep","resetStepCalc","Button","color","variant","disabled","onClick","CalculatorModel","activeStep","kgUnitConversion","weekTripsUnitConversion","percentUnitConversion","houseHeatingTypeCO2","buildingTypeTypeCO2","airConditionedCO2","houseGroupTotalCO2","houseGroupTotalCO2Average","houseGroupTotalCO2Sum","houseGroupTotalCO2Percent","transportGroupTotalCO2","transportGroupTotalCO2Average","transportGroupTotalCO2Sum","transportGroupTotalCO2Percent","publicTransportCityCO2","publicTransportSubwayCO2","publicTransportShuttleCO2","publicTransportGroupTotalCO2","publicTransportGroupTotalCO2Average","publicTransportGroupTotalCO2Sum","publicTransportGroupTotalCO2Percent","shortFlightsCO2","mediumFlightsCO2","longFlightsCO2","flightsTotalCO2","flightsTotalCO2Average","flightsTotalCO2Sum","flightsTotalCO2Percent","totalCO2Group","totalCO2GroupAverage","totalCO2GroupSum","totalCO2GroupPercent","stepTotal","calculateHouseGroupCO2Total","calculateTransportGroupCO2Total","calculatePublicTransportGroupCO2Total","calculateFlightsGroupCO2Total","console","log","onChangeModel","convertFromYearToMonthValue","sum","arg","defaultValue","Array","reducer","accumulator","currentValue","reduce","calculateHouseGroupCO2","emissions","factor","result","isNaN","calculatePublicTransportGroupCO2","City","Subway","Shuttle","calculateFlightsGroupCO2","Short","distance","Medium","Long","calculateFullInfo","calculateGroupCO2Average","setChartData","setCO2Result","countryCO2Factor","groupCO2Factor","quantity","additionalFactor","groupCO2","totalCO2","yearUnitConversion","converted","CO2Calculator","containerRef","state","chartData","model","_updateDimensions","container","offsetWidth","offsetHeight","setState","_initModel","_setChartData","_setCO2Result","_setActiveStep","_nextStep","prevState","stepCalculation","_prevStep","_onChange","target","_validate","_onBlur","_setValue","length","push","_calcStep","_resetStepCalc","resetStepCalculation","window","addEventListener","removeEventListener","Stepper","alternativeLabel","orientation","Step","StepLabel","defaultProps","info","App","AppConfig","materialUITheme","typography","join","h1","h2","h3","h4","h5","h6","palette","primary","dark","main","light","contrastText","secondary","theme","createMuiTheme","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.30d1f741.chunk.js","sourcesContent":["import validator from 'validator';\r\n\r\nconst validators = {\r\n    required: function (value) {\r\n        return !validator.isEmpty(value.toString());\r\n    },\r\n    isType: function (value, params = { type: 'string' }) {\r\n        return typeof value === params.type;\r\n    },\r\n    isNumeric: function (value) {\r\n        value = value === '' ? '1' : value;\r\n        return validator.isNumeric(value);\r\n    },\r\n    isPositive: function (value) {\r\n        value = value === '' ? '1' : value;\r\n        return validator.isNumeric(value) && (+value >= 0);\r\n    },\r\n    isZero: function (value) {\r\n        value = value === '' ? '1' : value;\r\n        return validator.isNumeric(value) && !(+value === 0);\r\n    },\r\n    isInt: function (value) {\r\n        value = value === '' ? '1' : value;\r\n        return validator.isInt(value);\r\n    },\r\n    isLength: function (value, params) {\r\n        return validator.isLength(value, params);\r\n    },\r\n    isEmail: function (value) {\r\n        return validator.isEmail(value);\r\n    }\r\n};\r\n\r\nexport default {\r\n    steps: ['House', 'Transport', 'Public transport', 'Flights', ''],\r\n    defaultWidth: 500,\r\n    defaultHeight: 500,\r\n    brakePoint: 576,\r\n    desktopClass: 'Desktop',\r\n    mobileClass: 'Mobile',\r\n    chartConfig: {\r\n        type: 'doughnut',\r\n        labels: ['House', 'Public transport', 'Transport', 'Flights'],\r\n        colors: ['#7FE7CC', '#F17E7E', '#EFCA8C', '#DFE38E'],\r\n        borderWidth: 2,\r\n        measureUnit: '%',\r\n        labelsSettings: [\r\n            {\r\n                render: function (args) {\r\n                    const minValue = 5;\r\n                    return args.percentage >= minValue ? args.percentage + '%' : '';\r\n                },\r\n                fontFamily: 'Segoe UI',\r\n                fontColor: '#fff',\r\n                fontSize: '18'\r\n            }\r\n        ],\r\n        cutoutPercentage: 60,\r\n        legendSettings: {\r\n            display: false\r\n        }\r\n    },\r\n    factors: {\r\n        countries: [\r\n            {\r\n                \"id\": 0,\r\n                \"name\": \"Austria\",\r\n                \"emissions\": 6.9,\r\n                \"code\": \"AT\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"Belgium\",\r\n                \"emissions\": 8.3,\r\n                \"code\": \"BE\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": \"Bulgaria\",\r\n                \"emissions\": 5.9,\r\n                \"code\": \"BG\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": \"Croatia\",\r\n                \"emissions\": 4.0,\r\n                \"code\": \"HR\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": \"Cyprus\",\r\n                \"emissions\": 5.3,\r\n                \"code\": \"CY\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 5,\r\n                \"name\": \"Czech Republic\",\r\n                \"emissions\": 9.2,\r\n                \"code\": \"CZ\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 6,\r\n                \"name\": \"Denmark\",\r\n                \"emissions\": 5.9,\r\n                \"code\": \"DK\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 7,\r\n                \"name\": \"Estonia\",\r\n                \"emissions\": 14.8,\r\n                \"code\": \"EE\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 8,\r\n                \"name\": \"Finland\",\r\n                \"emissions\": 8.7,\r\n                \"code\": \"FI\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 9,\r\n                \"name\": \"France\",\r\n                \"emissions\": 4.6,\r\n                \"code\": \"FR\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 10,\r\n                \"name\": \"Germany\",\r\n                \"emissions\": 8.9,\r\n                \"code\": \"DE\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 11,\r\n                \"name\": \"Greece\",\r\n                \"emissions\": 6.2,\r\n                \"code\": \"GR\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 12,\r\n                \"name\": \"Hungary\",\r\n                \"emissions\": 4.3,\r\n                \"code\": \"HU\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 13,\r\n                \"name\": \"Iceland\",\r\n                \"emissions\": 6.1,\r\n                \"code\": \"IS\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 14,\r\n                \"name\": \"Ireland\",\r\n                \"emissions\": 7.3,\r\n                \"code\": \"IE\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 15,\r\n                \"name\": \"Italy\",\r\n                \"emissions\": 5.3,\r\n                \"code\": \"IT\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 16,\r\n                \"name\": \"Latvia\",\r\n                \"emissions\": 3.5,\r\n                \"code\": \"LV\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 17,\r\n                \"name\": \"Liechtenstein\",\r\n                \"emissions\": 1.2,\r\n                \"code\": \"LI\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 18,\r\n                \"name\": \"Lithuania\",\r\n                \"emissions\": 4.4,\r\n                \"code\": \"LT\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 19,\r\n                \"name\": \"Luxembourg\",\r\n                \"emissions\": 17.4,\r\n                \"code\": \"LU\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 20,\r\n                \"name\": \"Malta\",\r\n                \"emissions\": 5.4,\r\n                \"code\": \"MT\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 21,\r\n                \"name\": \"Netherlands\",\r\n                \"emissions\": 9.9,\r\n                \"code\": \"NL\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 22,\r\n                \"name\": \"Norway\",\r\n                \"emissions\": 9.3,\r\n                \"code\": \"NO\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 23,\r\n                \"name\": \"Poland\",\r\n                \"emissions\": 7.5,\r\n                \"code\": \"PL\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 24,\r\n                \"name\": \"Portugal\",\r\n                \"emissions\": 4.3,\r\n                \"code\": \"PT\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 25,\r\n                \"name\": \"Romania\",\r\n                \"emissions\": 3.5,\r\n                \"code\": \"RO\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 26,\r\n                \"name\": \"Slovak Republic\",\r\n                \"emissions\": 5.7,\r\n                \"code\": \"SK\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 27,\r\n                \"name\": \"Slovenia\",\r\n                \"emissions\": 6.2,\r\n                \"code\": \"SI\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 28,\r\n                \"name\": \"Spain\",\r\n                \"emissions\": 5.0,\r\n                \"code\": \"ES\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 29,\r\n                \"name\": \"Sweden\",\r\n                \"emissions\": 4.5,\r\n                \"code\": \"SE\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 30,\r\n                \"name\": \"Switzerland\",\r\n                \"emissions\": 4.3,\r\n                \"code\": \"CH\",\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 31,\r\n                \"name\": \"United Kingdom\",\r\n                \"emissions\": 6.5,\r\n                \"code\": \"GB\",\r\n                \"translate\": {}\r\n            }\r\n        ],\r\n        buildingType: [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"Single family house\",\r\n                \"factor\": 1,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": \"Townhouse\",\r\n                \"factor\": 2,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": \"Apartment building 2-4 units\",\r\n                \"factor\": 5,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": \"Apartment building 5+ units\",\r\n                \"factor\": 3,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 5,\r\n                \"name\": \"Mobile house\",\r\n                \"factor\": 4,\r\n                \"translate\": {}\r\n            }\r\n        ],\r\n        houseHeatingType: [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"Natural gas\",\r\n                \"factor\": 0.5,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": \"Oil\",\r\n                \"factor\": 1,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": \"Propane\",\r\n                \"factor\": 1.5,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": \"Electricity\",\r\n                \"factor\": 2,\r\n                \"translate\": {}\r\n            }\r\n        ],\r\n        airConditioned: [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"Yes\",\r\n                \"factor\": 1,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": \"No\",\r\n                \"factor\": 0,\r\n                \"translate\": {}\r\n            }\r\n        ],\r\n        typeOfPersonalVehicle: [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"Hybrid\",\r\n                \"factor\": 0.048,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"name\": \"Electric\",\r\n                \"factor\": 0.038,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"name\": \"Small car\",\r\n                \"factor\": 0.090,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 4,\r\n                \"name\": \"Family sedan\",\r\n                \"factor\": 0.110,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 5,\r\n                \"name\": \"Large sedan\",\r\n                \"factor\": 0.162,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 6,\r\n                \"name\": \"Motorcycle\",\r\n                \"factor\": 0.110,\r\n                \"translate\": {}\r\n            },\r\n            {\r\n                \"id\": 7,\r\n                \"name\": \"None\",\r\n                \"factor\": 0,\r\n                \"translate\": {}\r\n            },\r\n        ],\r\n        publicTransportType: {\r\n            \"City\": {\r\n                \"id\": 1,\r\n                \"name\": \"City/Intercity bus\",\r\n                \"factor\": 0.07,\r\n                \"translate\": {}\r\n            },\r\n            \"Subway\": {\r\n                \"id\": 2,\r\n                \"name\": \"Subway/train\",\r\n                \"factor\": 0.028,\r\n                \"translate\": {}\r\n            },\r\n            \"Shuttle\": {\r\n                \"id\": 3,\r\n                \"name\": \"Shuttle/vanpool\",\r\n                \"factor\": 0.05,\r\n                \"translate\": {}\r\n            },\r\n        },\r\n        flights: {\r\n            \"Short\": {\r\n                \"id\": 1,\r\n                \"name\": \"Short flights up to 1h\",\r\n                \"factor\": 0.17271,\r\n                \"distance\": 400,\r\n                \"translate\": {}\r\n            },\r\n            \"Medium\": {\r\n                \"id\": 2,\r\n                \"name\": \"Medium flights up to 6h\",\r\n                \"factor\": 0.09695,\r\n                \"distance\": 2250,\r\n                \"translate\": {}\r\n            },\r\n            \"Long\": {\r\n                \"id\": 3,\r\n                \"name\": \"Long flights over 6h\",\r\n                \"factor\": 0.0874,\r\n                \"distance\": 4000,\r\n                \"translate\": {}\r\n            },\r\n        },\r\n        takeoffLandingFactor: 1.09\r\n    },\r\n    schema: {\r\n        Country: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Incorrect Type!', callback: validators.isType, params: { type: 'object' } }\r\n        ],\r\n        BuildingType: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Incorrect Type!', callback: validators.isType, params: { type: 'object' } }\r\n        ],\r\n        HouseHeatingType: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Incorrect Type!', callback: validators.isType, params: { type: 'object' } }\r\n        ],\r\n        AirConditioned: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Incorrect Type!', callback: validators.isType, params: { type: 'object' } }\r\n        ],\r\n        TypeOfPersonalVehicle: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Incorrect Type!', callback: validators.isType, params: { type: 'object' } }\r\n        ],\r\n        AnnualMileage: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 6 } },\r\n        ],\r\n        PublicTransportCityDistance: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        PublicTransportCityQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        PublicTransportSubwayDistance: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        PublicTransportSubwayQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        PublicTransportShuttleDistance: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        PublicTransportShuttleQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 4 } }\r\n        ],\r\n        ShortFlightQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 3 } }\r\n        ],\r\n        MediumFlightQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 3 } }\r\n        ],\r\n        LongFlightQuantity: [\r\n            { message: 'Invalid Number!', callback: validators.isNumeric },\r\n            { message: 'Should Be An Integer Value!', callback: validators.isInt },\r\n            { message: 'Should Be An Positive Value!', callback: validators.isPositive },\r\n            { message: 'Too Big Number!', callback: validators.isLength, params: { min: 0, max: 3 } }\r\n        ],\r\n        FullName: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Too Long!', callback: validators.isLength, params: { min: 0, max: 80 } },\r\n        ],\r\n        Email: [\r\n            { message: 'Required!', callback: validators.required },\r\n            { message: 'Invalid E-mail!', callback: validators.isEmail }\r\n        ]\r\n    },\r\n    services: {\r\n        formatNumber: function numberFormat(number) {\r\n            return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\r\n        }\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport Chart from 'chart.js';\r\nimport 'chartjs-plugin-labels';\r\nimport config from '../config';\r\n\r\nimport './CO2Chart.scss';\r\n\r\nconst { chartConfig } = config;\r\nconst { formatNumber } = config.services;\r\n\r\nexport default class CO2Chart extends Component {\r\n\r\n    CO2ChartRef = React.createRef();\r\n    chart = null;\r\n\r\n    componentDidMount() {\r\n        this._initChart();\r\n    }\r\n\r\n    _initChart = () => {\r\n\r\n        const { data, CO2Result } = this.props;\r\n\r\n        Chart.pluginService.register(this._drawDonutText({\r\n            top: 'CO2',\r\n            middle: formatNumber(CO2Result),\r\n            bottom: 'kg/month'\r\n        }));\r\n\r\n        const ctx = this.CO2ChartRef.current.getContext('2d');\r\n        this.chart = new Chart(ctx, {\r\n            type: chartConfig.type,\r\n            data: {\r\n                labels: chartConfig.labels,\r\n                datasets: [{\r\n                    data,\r\n                    backgroundColor: chartConfig.colors,\r\n                    borderColor: chartConfig.colors,\r\n                    borderWidth: chartConfig.borderWidth\r\n                }]\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    datalabels: this._labelsFormater(),\r\n                    labels: chartConfig.labelsSettings\r\n                },\r\n                cutoutPercentage: chartConfig.cutoutPercentage,\r\n                scales: {},\r\n                tooltips: {\r\n                    callbacks: this._tooltipCallbacks()\r\n                },\r\n                legend: chartConfig.legendSettings\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param text\r\n     * @param fontSize\r\n     * @param fontWeight\r\n     * @param fontStyle\r\n     * @param fillStyle\r\n     * @param fillStyleClear\r\n     * @param textBaseline\r\n     * @param fontFamily\r\n     * @param measureUnit\r\n     * @returns {{beforeDraw: beforeDraw}}\r\n     * @private\r\n     */\r\n\r\n    _drawDonutText = (\r\n        text = {\r\n            top: 'CO2',\r\n            middle: '25 000',\r\n            bottom: 'kg/month'\r\n        },\r\n        fontSize = {\r\n            top: 25,\r\n            middle: 30,\r\n            bottom: 18\r\n        },\r\n        fontWeight = {\r\n            top: 400,\r\n            middle: 600,\r\n            bottom: 500\r\n        },\r\n        fontStyle = {\r\n            top: 'normal',\r\n            middle: 'normal',\r\n            bottom: 'normal'\r\n        },\r\n        fillStyle = '#2B6B6A',\r\n        fillStyleClear = 'rgba(255, 255, 255, 1)',\r\n        textBaseline = 'middle',\r\n        fontFamily = 'Segoe UI',\r\n        measureUnit = 'px') => {\r\n        return {\r\n            beforeDraw: function (chart) {\r\n\r\n                function getTextX(width, ctx, value) {\r\n                    return Math.round((width - ctx.measureText(value).width) / 2)\r\n                }\r\n\r\n                const { width, height, ctx } = chart.chart;\r\n\r\n                ctx.restore();\r\n                ctx.font = `${fontStyle.middle} ${fontWeight.middle} ${fontSize.middle}${measureUnit} ${fontFamily}`;\r\n                ctx.textBaseline = textBaseline;\r\n\r\n                const textValue = text.middle || '';\r\n                const textValueX = getTextX(width, ctx, textValue);\r\n                const textValueY = height / 2;\r\n\r\n                ctx.fillStyle = fillStyleClear;\r\n                ctx.fillRect(height / 2, 0, height, height);\r\n                ctx.fillStyle = fillStyle;\r\n                ctx.fillText(textValue, textValueX, textValueY);\r\n\r\n                ctx.font = `${fontStyle.top} ${fontWeight.top} ${fontSize.top}${measureUnit} ${fontFamily}`;\r\n                const textLabelTop = text.top || '';\r\n                const textLabelTopX = getTextX(width, ctx, textLabelTop);\r\n                const textLabelTopY = Math.floor(height / 3);\r\n\r\n                ctx.fillText(textLabelTop, textLabelTopX, textLabelTopY);\r\n\r\n                ctx.font = `${fontStyle.bottom} ${fontWeight.bottom} ${fontSize.bottom}${measureUnit} ${fontFamily}`;\r\n                const textLabelBottom = text.bottom || '';\r\n                const textLabelBottomX = getTextX(width, ctx, textLabelBottom);\r\n                const textLabelBottomY = height - Math.floor(height / 3);\r\n\r\n                ctx.fillText(textLabelBottom, textLabelBottomX, textLabelBottomY);\r\n                ctx.save();\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    _tooltipCallbacks = () => {\r\n        return {\r\n            label: function (tooltipItem, data, splitSymbol = ':', measureUnit = '%') {\r\n\r\n                let dataLabel = data.labels[tooltipItem.index];\r\n                let value = `${splitSymbol} ` + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] + measureUnit;\r\n\r\n                if (Chart.helpers.isArray(dataLabel)) {\r\n                    dataLabel = dataLabel.slice();\r\n                    dataLabel[0] += value;\r\n                } else {\r\n                    dataLabel += value;\r\n                }\r\n                return dataLabel;\r\n            }\r\n        }\r\n    };\r\n\r\n    _labelsFormater = () => {\r\n        return {\r\n            formater: function (value) {\r\n                return value + `${chartConfig.measureUnit}`;\r\n            }\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='CO2Chart__Container'>\r\n                <div className='CO2Chart__ChartWrapper'>\r\n                    <canvas id='CO2Chart' ref={this.CO2ChartRef}/>\r\n                    <ul className='legend'>\r\n                        {chartConfig.labels.map((label, idx) => (\r\n                            <li key={label} className='legend-item'><span\r\n                                className='legend-icon'\r\n                                style={{ background: chartConfig.colors[idx] }}>&nbsp;</span><span\r\n                                className='legend-text'>{label}</span></li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import CO2Chart from './CO2Chart';\r\n\r\nexport default CO2Chart;","import FormFieldError from './FormFieldError';\r\n\r\nexport default FormFieldError;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormHelperText } from '@material-ui/core';\r\n\r\nexport default function FormFieldError(props) {\r\n    const { errors, name } = props;\r\n\r\n    return (<FormHelperText\r\n        error>{(!!errors[name]) && errors[name]}</FormHelperText>);\r\n}\r\n\r\nFormFieldError.propTypes = {\r\n    errors: PropTypes.object.isRequired,\r\n    touched: PropTypes.object.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormControl, Input, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport CO2Chart from '../co2-chart';\r\nimport FormFieldError from '../form-field-error';\r\nimport config from '../config';\r\n\r\nconst { countries, buildingType, houseHeatingType, airConditioned, typeOfPersonalVehicle } = config.factors;\r\n\r\nexport function StepContentProvider(props) {\r\n\r\n    const { stepIndex, isDesktop, isEmailEnable, onChange, onBlur, values, errors, touched, data, CO2Result } = props;\r\n\r\n    switch (stepIndex) {\r\n        case 0:\r\n            return (\r\n                <div className='form-part'>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>1</div>\r\n                                <div className='form-label-text'>Your country</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='Country-label'\r\n                                            htmlFor='Country'>Select country</InputLabel>\r\n                                <Select\r\n                                    labelid='Country-label'\r\n                                    id='Country'\r\n                                    name='Country'\r\n                                    value={(values && values.Country) ? values.Country : ''}\r\n                                    MenuProps={{\r\n                                        getContentAnchorEl: null,\r\n                                        anchorOrigin: {\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left'\r\n                                        }\r\n                                    }}\r\n                                    error={errors && !!errors.Country}\r\n                                    onChange={e => onChange(e)}\r\n                                    onBlur={e => onBlur(e)}\r\n                                >\r\n                                    {countries.map(country => (\r\n                                        <MenuItem key={country.id} value={country}\r\n                                                  button={true}>{country.name}</MenuItem>))}\r\n                                </Select>\r\n                                <FormFieldError errors={errors} touched={touched} name='Country'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>2</div>\r\n                                <div className='form-label-text'>Your building type</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='BuildingType-label'\r\n                                            htmlFor='BuildingType'>Your building type</InputLabel>\r\n                                <Select\r\n                                    labelid='BuildingType-label'\r\n                                    id='BuildingType'\r\n                                    name='BuildingType'\r\n                                    value={(values && values.BuildingType) ? values.BuildingType : ''}\r\n                                    MenuProps={{\r\n                                        getContentAnchorEl: null,\r\n                                        anchorOrigin: {\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    onBlur={e => onBlur(e)}\r\n                                    error={errors && !!errors.BuildingType}\r\n                                >\r\n                                    {buildingType.map(type => (\r\n                                        <MenuItem key={type.id} value={type}\r\n                                                  button={true}>{type.name}</MenuItem>))}\r\n                                </Select>\r\n                                <FormFieldError errors={errors} touched={touched} name='BuildingType'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>3</div>\r\n                                <div className='form-label-text'>House heating type</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='HouseHeatingType-label'\r\n                                            htmlFor='HouseHeatingType'>Select type</InputLabel>\r\n                                <Select\r\n                                    labelid='HouseHeatingType-label'\r\n                                    id='HouseHeatingType'\r\n                                    name='HouseHeatingType'\r\n                                    value={(values && values.HouseHeatingType) ? values.HouseHeatingType : ''}\r\n                                    error={errors && !!errors.HouseHeatingType}\r\n                                    MenuProps={{\r\n                                        getContentAnchorEl: null,\r\n                                        anchorOrigin: {\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    onBlur={e => onBlur(e)}\r\n                                >\r\n                                    {houseHeatingType.map(type => (\r\n                                        <MenuItem key={type.id} value={type}\r\n                                                  button={true}>{type.name}</MenuItem>))}\r\n                                </Select>\r\n                                <FormFieldError errors={errors} touched={touched} name='HouseHeatingType'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>4</div>\r\n                                <div className='form-label-text'>Air-conditioned?</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='AirConditioned-label'\r\n                                            htmlFor='AirConditioned'>Yes/no</InputLabel>\r\n                                <Select\r\n                                    labelid='AirConditioned-label'\r\n                                    id='AirConditioned'\r\n                                    name='AirConditioned'\r\n                                    value={(values && values.AirConditioned) ? values.AirConditioned : ''}\r\n                                    error={errors && !!errors.AirConditioned}\r\n                                    MenuProps={{\r\n                                        getContentAnchorEl: null,\r\n                                        anchorOrigin: {\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    onBlur={e => onBlur(e)}\r\n                                >\r\n                                    {airConditioned.map(type => (\r\n                                        <MenuItem key={type.id} value={type}\r\n                                                  button={true}>{type.name}</MenuItem>))}\r\n                                </Select>\r\n                                <FormFieldError errors={errors} touched={touched} name='AirConditioned'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        case 1:\r\n            return (\r\n                <div className='form-part'>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>1</div>\r\n                                <div className='form-label-text'>Type of personal vehicle</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='TypeOfPersonalVehicle-label'\r\n                                            htmlFor='TypeOfPersonalVehicle'>Select type</InputLabel>\r\n                                <Select\r\n                                    labelid='TypeOfPersonalVehicle-label'\r\n                                    id='TypeOfPersonalVehicle'\r\n                                    name='TypeOfPersonalVehicle'\r\n                                    value={(values && values.TypeOfPersonalVehicle) ? values.TypeOfPersonalVehicle : ''}\r\n                                    error={errors && !!errors.TypeOfPersonalVehicle}\r\n                                    MenuProps={{\r\n                                        getContentAnchorEl: null,\r\n                                        anchorOrigin: {\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left'\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => onChange(e)}\r\n                                    onBlur={e => onBlur(e)}\r\n                                >\r\n                                    {typeOfPersonalVehicle.map(type => (\r\n                                        <MenuItem key={type.id} value={type}\r\n                                                  button={true}>{type.name}</MenuItem>))}\r\n                                </Select>\r\n                                <FormFieldError errors={errors} touched={touched} name='TypeOfPersonalVehicle'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>2</div>\r\n                                <div className='form-label-text'>Annual mileage</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='AnnualMileage-label'\r\n                                            htmlFor='AnnualMileage'>Enter quantity</InputLabel>\r\n                                <Input id='AnnualMileage' name='AnnualMileage'\r\n                                       autoComplete='off'\r\n                                       value={(values && values.AnnualMileage) ? values.AnnualMileage : ''}\r\n                                       error={errors && !!errors.AnnualMileage}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <FormFieldError errors={errors} touched={touched} name='AnnualMileage'/>\r\n                                <div className='form-input-unit'>km p.a.</div>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 2:\r\n            return (\r\n                <div className='form-part'>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>1</div>\r\n                                <div className='form-label-text'>City/intercity bus</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col p0'>\r\n                            <div className='form-combine-inputs'>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportCityDistance-label'\r\n                                                    htmlFor='PublicTransportCityDistance'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportCityDistance' name='PublicTransportCityDistance'\r\n                                               autoComplete='off'\r\n                                               value={(values && values.PublicTransportCityDistance) ? values.PublicTransportCityDistance : ''}\r\n                                               error={errors && !!errors.PublicTransportCityDistance}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>km/day</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportCityDistance'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportCityQuantity-label'\r\n                                                    htmlFor='PublicTransportCityQuantity'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportCityQuantity' name='PublicTransportCityQuantity'\r\n                                               autoComplete='off'\r\n                                               value={(values && values.PublicTransportCityQuantity) ? values.PublicTransportCityQuantity : ''}\r\n                                               error={errors && !!errors.PublicTransportCityQuantity}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>trips/week</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportCityQuantity'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>2</div>\r\n                                <div className='form-label-text'>Subway/train</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col p0'>\r\n                            <div className='form-combine-inputs'>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportSubwayDistance-label'\r\n                                                    htmlFor='PublicTransportSubwayDistance'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportSubwayDistance' name='PublicTransportSubwayDistance'\r\n                                               autoComplete='off'\r\n                                               value={(values && values.PublicTransportSubwayDistance) ? values.PublicTransportSubwayDistance : ''}\r\n                                               error={errors && !!errors.PublicTransportSubwayDistance}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>km/day</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportSubwayDistance'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportSubwayQuantity-label'\r\n                                                    htmlFor='PublicTransportSubwayQuantity'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportSubwayQuantity' name='PublicTransportSubwayQuantity'\r\n                                               autoComplete='off'\r\n                                               value={(values && values.PublicTransportSubwayQuantity) ? values.PublicTransportSubwayQuantity : ''}\r\n                                               error={errors && !!errors.PublicTransportSubwayQuantity}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>trips/week</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportSubwayQuantity'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>3</div>\r\n                                <div className='form-label-text'>Shuttle/vanpool</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col p0'>\r\n                            <div className='form-combine-inputs'>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportShuttleDistance-label'\r\n                                                    htmlFor='PublicTransportShuttleDistance'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportShuttleDistance' name='PublicTransportShuttleDistance'\r\n                                               autoComplete='off'\r\n                                               value={(values && values.PublicTransportShuttleDistance) ? values.PublicTransportShuttleDistance : ''}\r\n                                               error={errors && !!errors.PublicTransportShuttleDistance}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>km/day</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportShuttleDistance'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className='form-combine-input'>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel id='PublicTransportShuttleQuantity-label'\r\n                                                    htmlFor='PublicTransportShuttleQuantity'>Quantity</InputLabel>\r\n                                        <Input id='PublicTransportShuttleQuantity' name='PublicTransportShuttleQuantity'\r\n                                               value={(values && values.PublicTransportShuttleQuantity) ? values.PublicTransportShuttleQuantity : ''}\r\n                                               error={errors && !!errors.PublicTransportShuttleQuantity}\r\n                                               onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                        <div className='form-input-unit'>trips/week</div>\r\n                                        <FormFieldError errors={errors} touched={touched}\r\n                                                        name='PublicTransportShuttleQuantity'/>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 3:\r\n            return (\r\n                <div className='form-part'>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>1</div>\r\n                                <div className='form-label-text'>Short flights up to 1h</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='ShortFlightQuantity-label'\r\n                                            htmlFor='ShortFlightQuantity'>Enter quantity</InputLabel>\r\n                                <Input id='ShortFlightQuantity' name='ShortFlightQuantity' autoComplete='off'\r\n                                       value={(values && values.ShortFlightQuantity) ? values.ShortFlightQuantity : ''}\r\n                                       error={!!errors.ShortFlightQuantity}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <div className='form-input-unit'>flights/year</div>\r\n                                <FormFieldError errors={errors} touched={touched} name='ShortFlightQuantity'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>2</div>\r\n                                <div className='form-label-text'>Medium flights up to 6h</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='MediumFlightQuantity-label'\r\n                                            htmlFor='MediumFlightQuantity'>Enter quantity</InputLabel>\r\n                                <Input id='MediumFlightQuantity' name='MediumFlightQuantity' autoComplete='off'\r\n                                       value={(values && values.MediumFlightQuantity) ? values.MediumFlightQuantity : ''}\r\n                                       error={errors && !!errors.MediumFlightQuantity}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <div className='form-input-unit'>flights/year</div>\r\n                                <FormFieldError errors={errors} touched={touched} name='MediumFlightQuantity'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className='form-row'>\r\n                        <div className='form-col form-col-label'>\r\n                            <div className='form-label'>\r\n                                <div className='form-label-index'>3</div>\r\n                                <div className='form-label-text'>Long flights up to 6h</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-col'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='LongFlightQuantity-label'\r\n                                            htmlFor='LongFlightQuantity'>Enter quantity</InputLabel>\r\n                                <Input id='LongFlightQuantity' name='LongFlightQuantity' autoComplete='off'\r\n                                       value={(values && values.LongFlightQuantity) ? values.LongFlightQuantity : ''}\r\n                                       error={errors && !!errors.LongFlightQuantity}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <div className='form-input-unit'>flights/year</div>\r\n                                <FormFieldError errors={errors} touched={touched} name='LongFlightQuantity'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 4:\r\n            return (\r\n                <div className='result'>\r\n                    {!isDesktop && <CO2Chart data={data} CO2Result={CO2Result}/>}\r\n                    <p className='result-lead'>\r\n                        Your CO2 emissions are within the average for your country,\r\n                        but that is not a reason to be proud, friend!\r\n                    </p>\r\n                    <p className='result-lead'>You have a work to do</p>\r\n                    {isDesktop && <CO2Chart data={data} CO2Result={CO2Result}/>}\r\n                    {isEmailEnable && <React.Fragment>\r\n                        <p className='result-lead-small'>Enter your e-mail and you'll receive a detailed report and plan\r\n                            how\r\n                            to offset your CO<sub>2</sub></p>\r\n                        <div className='result-form-part'>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='FullName-label'\r\n                                            htmlFor='FullName'>First Name, Last Name</InputLabel>\r\n                                <Input id='FullName' name='FullName' autoComplete='off'\r\n                                       value={(values && values.FullName) ? values.FullName : ''}\r\n                                       error={errors && !!errors.FullName}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <FormFieldError errors={errors} touched={touched} name='FullName'/>\r\n                            </FormControl>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id='Email-label'\r\n                                            htmlFor='Email'>E-mail</InputLabel>\r\n                                <Input id='Email' name='Email' autoComplete='off'\r\n                                       value={(values && values.Email) ? values.Email : ''}\r\n                                       error={errors && !!errors.Email}\r\n                                       onChange={e => onChange(e)} onBlur={e => onBlur(e)}/>\r\n                                <FormFieldError errors={errors} touched={touched} name='Email'/>\r\n                            </FormControl>\r\n                        </div>\r\n                    </React.Fragment>}\r\n                </div>\r\n            );\r\n        case 5:\r\n            return (\r\n                <div className='done'>\r\n                    <p className='done-lead'>Welcome to the green side!</p>\r\n                    {isEmailEnable ? <p className='done-lead-small'>\r\n                        Thank you for stepping on the road of CO2 consciousness. We have sent you the results on your\r\n                        email, together with the offsetting options. Check them out and let's make our planet better for\r\n                        us and future generations!\r\n                    </p> : <p className='done-lead-small'>\r\n                        Thank you for stepping on the road of CO2 consciousness. We have saved the result in your profile. Check them out and let's make our planet better for\r\n                        us and future generations!\r\n                    </p>}\r\n                </div>\r\n            );\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n}\r\n\r\nStepContentProvider.propTypes = {\r\n    isDesktop: PropTypes.bool.isRequired,\r\n    isEmailEnable: PropTypes.bool.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    onBlur: PropTypes.func.isRequired,\r\n    values: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    touched: PropTypes.object.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n    CO2Result: PropTypes.number.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport function StepNavigationProvider(props) {\r\n\r\n    const { stepIndex, next, prev, set, isDesktop, isEmailEnable, calcStep, resetStepCalc, errors } = props;\r\n\r\n    switch (stepIndex) {\r\n        case 0:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation next' color='primary'\r\n                            variant={isDesktop ? 'outlined' : 'contained'}\r\n                            disabled={\r\n                                !!errors.Country ||\r\n                                !!errors.BuildingType ||\r\n                                !!errors.HouseHeatingType ||\r\n                                !!errors.AirConditioned\r\n                            }\r\n                            onClick={() => {\r\n                                calcStep();\r\n                                next();\r\n                            }}>\r\n                        <span className='btn-text'>Next step</span>\r\n                        &nbsp;<span\r\n                        className='btn-symbol'>&#62;</span></Button>\r\n                </React.Fragment>\r\n            );\r\n        case 1:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation prev mr1 white'  color='primary' variant='outlined'\r\n                            onClick={() => {\r\n                                resetStepCalc();\r\n                                prev();\r\n                            }}><span\r\n                        className='btn-symbol'>&#60;</span> <span className='btn-text'>Previous step</span></Button>\r\n                    <Button className='btn-navigation next'  color='primary'\r\n                            variant={isDesktop ? 'outlined' : 'contained'}\r\n                            disabled={\r\n                                !!errors.TypeOfPersonalVehicle ||\r\n                                !!errors.AnnualMileage\r\n                            }\r\n                            onClick={() => {\r\n                                calcStep();\r\n                                next();\r\n                            }}>Next step <span\r\n                        className='btn-symbol'>&#62;</span></Button>\r\n                </React.Fragment>\r\n            );\r\n        case 2:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation prev mr1 white'  color='primary' variant='outlined'\r\n                            onClick={() => {\r\n                                resetStepCalc();\r\n                                prev();\r\n                            }}><span\r\n                        className='btn-symbol'>&#60;</span> <span className='btn-text'>Previous step</span></Button>\r\n                    <Button className='btn-navigation next 1'  color='primary'\r\n                            variant={isDesktop ? 'outlined' : 'contained'}\r\n                            disabled={\r\n                                !!errors.PublicTransportCityDistance ||\r\n                                !!errors.PublicTransportCityQuantity ||\r\n                                !!errors.PublicTransportSubwayDistance ||\r\n                                !!errors.PublicTransportSubwayQuantity ||\r\n                                !!errors.PublicTransportShuttleDistance ||\r\n                                !!errors.PublicTransportShuttleQuantity\r\n                            }\r\n                            onClick={() => {\r\n                                calcStep();\r\n                                next();\r\n                            }}>Next step <span\r\n                        className='btn-symbol'>&#62;</span></Button>\r\n                </React.Fragment>\r\n            );\r\n        case 3:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation prev mr1'  color='primary' variant='outlined'\r\n                            onClick={() => {\r\n                                resetStepCalc();\r\n                                prev();\r\n                            }}><span\r\n                        className='btn-symbol'>&#60;</span> <span className='btn-text'>Previous step</span></Button>\r\n                    <Button className='btn-navigation'  color='primary'\r\n                            disabled={\r\n                                !!errors.ShortFlightQuantity ||\r\n                                !!errors.MediumFlightQuantity ||\r\n                                !!errors.LongFlightQuantity\r\n                            }\r\n                            onClick={() => {\r\n                                calcStep();\r\n                                next();\r\n                            }}>Calculate</Button>\r\n                </React.Fragment>\r\n            );\r\n        case 4:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation'  color='primary'\r\n                            disabled={\r\n                                isEmailEnable ? (\r\n                                !!errors.FullName ||\r\n                                !!errors.Email\r\n                                ) : false\r\n                            }\r\n                            onClick={() => next()}>{isEmailEnable ? 'Send' : 'Save'}</Button>\r\n                </React.Fragment>\r\n            );\r\n        case 5:\r\n            return (\r\n                <React.Fragment>\r\n                    <Button className='btn-navigation'  color='primary' onClick={() => {\r\n                        calcStep();\r\n                        set(0);\r\n                    }}>Calculate\r\n                        again</Button>\r\n                </React.Fragment>\r\n            );\r\n        default:\r\n            return 'Unknown step';\r\n    }\r\n\r\n}\r\n\r\nStepNavigationProvider.propTypes = {\r\n    isDesktop: PropTypes.bool.isRequired,\r\n    isEmailEnable: PropTypes.bool.isRequired,\r\n    next: PropTypes.func.isRequired,\r\n    prev: PropTypes.func.isRequired,\r\n    resetStepCalc: PropTypes.func.isRequired,\r\n    calcStep: PropTypes.func.isRequired,\r\n    set: PropTypes.func.isRequired,\r\n    values: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};","export default class CalculatorModel {\r\n\r\n    constructor(activeStep, callbacks) {\r\n        this.activeStep = activeStep || 0;\r\n        this.callbacks = (callbacks && typeof callbacks === 'object') ? callbacks : {};\r\n        this.kgUnitConversion = 1000;\r\n        this.weekTripsUnitConversion = 52;\r\n        this.percentUnitConversion = 100;\r\n\r\n        /*\r\n            House CO2 Group\r\n         */\r\n\r\n        this.houseHeatingTypeCO2 = 0;\r\n        this.buildingTypeTypeCO2 = 0;\r\n        this.airConditionedCO2 = 0;\r\n        this.houseGroupTotalCO2 = 0;\r\n        this.houseGroupTotalCO2Average = 0;\r\n        this.houseGroupTotalCO2Sum = 0;\r\n        this.houseGroupTotalCO2Percent = 0;\r\n\r\n        /*\r\n            Transport CO2 Group\r\n         */\r\n\r\n        this.transportGroupTotalCO2 = 0;\r\n        this.transportGroupTotalCO2Average = 0;\r\n        this.transportGroupTotalCO2Sum = 0;\r\n        this.transportGroupTotalCO2Percent = 0;\r\n\r\n        /*\r\n            Public Transport CO2 Group\r\n         */\r\n\r\n        this.publicTransportCityCO2 = 0;\r\n        this.publicTransportSubwayCO2 = 0;\r\n        this.publicTransportShuttleCO2 = 0;\r\n        this.publicTransportGroupTotalCO2 = 0;\r\n        this.publicTransportGroupTotalCO2Average = 0;\r\n        this.publicTransportGroupTotalCO2Sum = 0;\r\n        this.publicTransportGroupTotalCO2Percent = 0;\r\n\r\n        /*\r\n            Flights CO2 Group\r\n         */\r\n\r\n        this.shortFlightsCO2 = 0;\r\n        this.mediumFlightsCO2 = 0;\r\n        this.longFlightsCO2 = 0;\r\n        this.flightsTotalCO2 = 0;\r\n        this.flightsTotalCO2Average = 0;\r\n        this.flightsTotalCO2Sum = 0;\r\n        this.flightsTotalCO2Percent = 0;\r\n\r\n        /*\r\n            Total CO2 Group\r\n         */\r\n\r\n        this.totalCO2Group = 0;\r\n        this.totalCO2GroupAverage = 0;\r\n        this.totalCO2GroupSum = 0;\r\n        this.totalCO2GroupPercent = 100;\r\n        this.stepTotal = 0;\r\n    }\r\n\r\n    stepCalculation(activeStep, values = null, errors = null, config) {\r\n        if (!values || !errors) return;\r\n\r\n        switch (activeStep) {\r\n            case 0:\r\n                this.calculateHouseGroupCO2Total(values);\r\n                break;\r\n            case 1:\r\n                this.calculateTransportGroupCO2Total(values);\r\n                break;\r\n            case 2:\r\n                this.calculatePublicTransportGroupCO2Total(values, config);\r\n                break;\r\n            case 3:\r\n                this.calculateFlightsGroupCO2Total(values, config);\r\n                break;\r\n            default:\r\n                console.log(`not handled step ${this.activeStep}`);\r\n        }\r\n    }\r\n\r\n    resetStepCalculation(activeStep, values = null, errors = null, config) {\r\n        if (!values || !errors) return;\r\n        switch (activeStep) {\r\n            case 0:\r\n                this.stepTotal = 0;\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            case 1:\r\n                this.stepTotal = 0;\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            case 2:\r\n                this.stepTotal = this.convertFromYearToMonthValue(this.houseGroupTotalCO2);\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            case 3:\r\n                this.stepTotal = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2, this.transportGroupTotalCO2));\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            case 4:\r\n                this.totalCO2GroupSum = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2Sum, this.transportGroupTotalCO2Sum, this.publicTransportGroupTotalCO2Sum));\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            case 5:\r\n                this.totalCO2GroupSum = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2Sum, this.transportGroupTotalCO2Sum, this.publicTransportGroupTotalCO2Sum, this.flightsTotalCO2Sum));\r\n                this.callbacks.onChangeModel(this);\r\n                break;\r\n            default:\r\n                console.log(`step ${this.activeStep}`);\r\n        }\r\n    }\r\n\r\n    sum(...arg) {\r\n        const defaultValue = 0;\r\n\r\n        if (!arg) return defaultValue;\r\n        if (Array.isArray(arg)) {\r\n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n            return arg.reduce(reducer, defaultValue);\r\n        }\r\n    }\r\n\r\n    calculateHouseGroupCO2Total(values) {\r\n        const { Country, BuildingType, HouseHeatingType, AirConditioned } = values;\r\n\r\n        this.buildingTypeTypeCO2 = this.calculateHouseGroupCO2(Country.emissions, BuildingType.factor);\r\n        this.houseHeatingTypeCO2 = this.calculateHouseGroupCO2(Country.emissions, HouseHeatingType.factor);\r\n        this.airConditionedCO2 = this.calculateHouseGroupCO2(Country.emissions, AirConditioned.factor);\r\n        this.houseGroupTotalCO2 = Math.round(this.sum(this.buildingTypeTypeCO2, this.houseHeatingTypeCO2, this.airConditionedCO2) * this.kgUnitConversion);\r\n        this.stepTotal = this.convertFromYearToMonthValue(this.houseGroupTotalCO2);\r\n        this.callbacks.onChangeModel(this);\r\n    }\r\n\r\n    calculateTransportGroupCO2Total(values) {\r\n        const { TypeOfPersonalVehicle, AnnualMileage } = values;\r\n        const result = Math.round(TypeOfPersonalVehicle.factor * AnnualMileage);\r\n        this.transportGroupTotalCO2 = isNaN(result) ? 0 : result;\r\n        this.stepTotal = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2, this.transportGroupTotalCO2));\r\n        this.callbacks.onChangeModel(this);\r\n    }\r\n\r\n    calculatePublicTransportGroupCO2Total(values, config) {\r\n        const { publicTransportType } = config.factors;\r\n        const { PublicTransportCityDistance, PublicTransportCityQuantity, PublicTransportShuttleDistance, PublicTransportShuttleQuantity, PublicTransportSubwayDistance, PublicTransportSubwayQuantity } = values;\r\n\r\n        this.publicTransportCityCO2 = this.calculatePublicTransportGroupCO2(PublicTransportCityDistance, PublicTransportCityQuantity, publicTransportType.City.factor);\r\n        this.publicTransportSubwayCO2 = this.calculatePublicTransportGroupCO2(PublicTransportSubwayDistance, PublicTransportSubwayQuantity, publicTransportType.Subway.factor);\r\n        this.publicTransportShuttleCO2 = this.calculatePublicTransportGroupCO2(PublicTransportShuttleDistance, PublicTransportShuttleQuantity, publicTransportType.Shuttle.factor);\r\n        this.publicTransportGroupTotalCO2 = Math.round(this.sum(this.publicTransportCityCO2, this.publicTransportSubwayCO2, this.publicTransportShuttleCO2));\r\n        this.stepTotal = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2, this.transportGroupTotalCO2, this.publicTransportGroupTotalCO2));\r\n        this.callbacks.onChangeModel(this);\r\n\r\n    }\r\n\r\n    calculateFlightsGroupCO2Total(values, config) {\r\n        const { flights, takeoffLandingFactor } = config.factors;\r\n        const { ShortFlightQuantity, MediumFlightQuantity, LongFlightQuantity } = values;\r\n\r\n        this.shortFlightsCO2 = this.calculateFlightsGroupCO2(flights.Short.distance, ShortFlightQuantity, flights.Short.factor, takeoffLandingFactor);\r\n        this.mediumFlightsCO2 = this.calculateFlightsGroupCO2(flights.Medium.distance, MediumFlightQuantity, flights.Medium.factor, takeoffLandingFactor);\r\n        this.longFlightsCO2 = this.calculateFlightsGroupCO2(flights.Long.distance, LongFlightQuantity, flights.Long.factor, takeoffLandingFactor);\r\n        this.flightsTotalCO2 = Math.round(this.sum(this.shortFlightsCO2, this.mediumFlightsCO2, this.longFlightsCO2, this.flightsTotalCO2));\r\n        this.stepTotal = this.convertFromYearToMonthValue(this.sum(this.houseGroupTotalCO2, this.transportGroupTotalCO2, this.publicTransportGroupTotalCO2, this.flightsTotalCO2));\r\n        this.calculateFullInfo(values);\r\n        this.callbacks.onChangeModel(this);\r\n    }\r\n\r\n    calculateFullInfo(values) {\r\n        const { Country } = values;\r\n\r\n        this.totalCO2Group = this.sum(this.houseGroupTotalCO2, this.transportGroupTotalCO2, this.publicTransportGroupTotalCO2, this.flightsTotalCO2);\r\n\r\n        this.houseGroupTotalCO2Average = this.calculateGroupCO2Average(this.houseGroupTotalCO2, this.totalCO2Group, Country.emissions);\r\n        this.transportGroupTotalCO2Average = this.calculateGroupCO2Average(this.transportGroupTotalCO2, this.totalCO2Group, Country.emissions);\r\n        this.publicTransportGroupTotalCO2Average = this.calculateGroupCO2Average(this.publicTransportGroupTotalCO2, this.totalCO2Group, Country.emissions);\r\n        this.flightsTotalCO2Average = this.calculateGroupCO2Average(this.flightsTotalCO2, this.totalCO2Group, Country.emissions);\r\n\r\n        this.totalCO2GroupAverage = this.sum(this.houseGroupTotalCO2Average, this.transportGroupTotalCO2Average,\r\n            this.publicTransportGroupTotalCO2Average, this.flightsTotalCO2Average);\r\n\r\n        this.houseGroupTotalCO2Sum = this.houseGroupTotalCO2 + this.houseGroupTotalCO2Average;\r\n        this.transportGroupTotalCO2Sum = this.transportGroupTotalCO2Average + this.transportGroupTotalCO2;\r\n        this.publicTransportGroupTotalCO2Sum = this.publicTransportGroupTotalCO2Average + this.publicTransportGroupTotalCO2;\r\n        this.flightsTotalCO2Sum = this.flightsTotalCO2Average + this.flightsTotalCO2;\r\n\r\n        this.totalCO2GroupSum = this.sum(this.houseGroupTotalCO2Sum, this.transportGroupTotalCO2Sum, this.publicTransportGroupTotalCO2Sum, this.flightsTotalCO2Sum);\r\n\r\n        this.houseGroupTotalCO2Percent = Math.round((this.houseGroupTotalCO2Sum / this.totalCO2GroupSum) * this.percentUnitConversion);\r\n        this.transportGroupTotalCO2Percent = Math.round((this.transportGroupTotalCO2Sum / this.totalCO2GroupSum) * this.percentUnitConversion);\r\n        this.publicTransportGroupTotalCO2Percent = Math.round((this.publicTransportGroupTotalCO2Sum / this.totalCO2GroupSum) * this.percentUnitConversion);\r\n        this.flightsTotalCO2Percent = Math.round((this.flightsTotalCO2Sum / this.totalCO2GroupSum) * this.percentUnitConversion);\r\n\r\n        this.totalCO2GroupPercent = this.sum(this.houseGroupTotalCO2Percent, this.transportGroupTotalCO2Percent, this.publicTransportGroupTotalCO2Percent, this.flightsTotalCO2Percent);\r\n        this.stepTotal = this.convertFromYearToMonthValue(this.totalCO2GroupSum);\r\n\r\n        this.callbacks.setChartData([this.houseGroupTotalCO2Percent, this.publicTransportGroupTotalCO2Percent, this.transportGroupTotalCO2Percent, this.flightsTotalCO2Percent]);\r\n        this.callbacks.setCO2Result(this.convertFromYearToMonthValue(this.totalCO2GroupSum));\r\n        this.callbacks.onChangeModel(this);\r\n    }\r\n\r\n    calculateHouseGroupCO2(countryCO2Factor = 0, groupCO2Factor = 0, defaultValue = 0) {\r\n        const result = (countryCO2Factor * groupCO2Factor) / this.percentUnitConversion;\r\n        return isNaN(result) ? defaultValue : result;\r\n    }\r\n\r\n    calculatePublicTransportGroupCO2(distance = 0, quantity = 0, groupCO2Factor = 0, defaultValue = 0) {\r\n        const result = distance * quantity * this.weekTripsUnitConversion * groupCO2Factor;\r\n        return isNaN(result) ? defaultValue : result;\r\n    }\r\n\r\n    calculateFlightsGroupCO2(distance = 0, quantity = 0, groupCO2Factor = 0, additionalFactor = 0, defaultValue = 0) {\r\n        const result = distance * quantity * groupCO2Factor * additionalFactor;\r\n        return isNaN(result) ? defaultValue : result;\r\n    }\r\n\r\n    calculateGroupCO2Average(groupCO2 = 0, totalCO2 = 0, countryCO2Factor = 0, defaultValue = 0) {\r\n        const result = groupCO2 / totalCO2 * countryCO2Factor * this.kgUnitConversion;\r\n        return isNaN(result) ? defaultValue : result;\r\n    }\r\n\r\n    convertFromYearToMonthValue(value = 0, yearUnitConversion = 12) {\r\n        if (!value) return;\r\n        const converted = Math.floor(value / yearUnitConversion);\r\n        return isNaN(converted) ? 0 : converted;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Stepper, Step, StepLabel } from '@material-ui/core';\r\nimport { StepContentProvider, StepNavigationProvider } from './step-provider';\r\nimport config from './config';\r\nimport CalculatorModel from './calculator-model';\r\n\r\nimport './CO2Calculator.scss';\r\n\r\nconst { schema } = config;\r\nconst { formatNumber } = config.services;\r\n\r\nexport default class CO2Calculator extends Component {\r\n\r\n    containerRef = React.createRef();\r\n\r\n    state = {\r\n        width: 0,\r\n        height: 0,\r\n        isDesktop: true,\r\n        activeStep: 0,\r\n        values: {},\r\n        errors: {\r\n            Country: 'Required field!',\r\n            BuildingType: 'Required field!',\r\n            HouseHeatingType: 'Required field!',\r\n            AirConditioned: 'Required field!',\r\n            TypeOfPersonalVehicle: 'Required field!',\r\n            FullName: 'Required field!',\r\n            Email: 'Required field!'\r\n        },\r\n        touched: {},\r\n        chartData: [25, 25, 25, 25],\r\n        CO2Result: 0,\r\n        model: null\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this._initModel();\r\n        this._updateDimensions();\r\n        window.addEventListener('resize', this._updateDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this._updateDimensions);\r\n    }\r\n\r\n    _updateDimensions = () => {\r\n        if (!this.containerRef || !this.containerRef.current) return;\r\n\r\n        const { current: container } = this.containerRef;\r\n        const width = container.offsetWidth || config.defaultWidth;\r\n        const height = container.offsetHeight || config.defaultHeight;\r\n        const isDesktop = (width > config.brakePoint);\r\n\r\n        this.setState(() => ({\r\n            width,\r\n            height,\r\n            isDesktop\r\n        }),);\r\n\r\n    };\r\n\r\n    _initModel = () => {\r\n        const { activeStep } = this.state;\r\n        const { onChange } = this.props;\r\n        const callbacks = {\r\n            setChartData: this._setChartData,\r\n            setCO2Result: this._setCO2Result,\r\n            onChangeModel: onChange\r\n        };\r\n        this.setState({ model: new CalculatorModel(activeStep, callbacks) });\r\n    };\r\n\r\n    _setActiveStep = stepIndex => {\r\n        this.setState(() => ({\r\n            activeStep: stepIndex\r\n        }), () => {\r\n            const { activeStep } = this.state;\r\n            if (activeStep === 0) this._initModel();\r\n        })\r\n    };\r\n\r\n    _nextStep = () => {\r\n        this.setState(prevState => ({\r\n            activeStep: prevState.activeStep + 1\r\n        }), () => {\r\n            const { model, activeStep } = this.state;\r\n            model.stepCalculation(activeStep);\r\n        })\r\n    };\r\n\r\n    _prevStep = () => {\r\n        this.setState(prevState => ({\r\n            activeStep: prevState.activeStep - 1\r\n        }))\r\n    };\r\n\r\n    _onChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        this._validate(name, value);\r\n\r\n        this.setState(prevState => ({\r\n            values: { ...prevState.values, [name]: value }\r\n        }));\r\n    };\r\n\r\n    _onBlur = e => {\r\n        const { name } = e.target;\r\n        this.setState(prevState => ({\r\n            touched: { ...prevState.touched, [name]: true }\r\n        }));\r\n    };\r\n\r\n    _setValue = (name, value) => {\r\n        this.setState(prevState => ({\r\n            values: { ...prevState.values, [name]: value }\r\n        }));\r\n    };\r\n\r\n    /*_setError = (name, value) => {\r\n        this.setState(prevState => ({\r\n            errors: { ...prevState.values, [name]: value }\r\n        }));\r\n    };*/\r\n\r\n    _validate = (name, value) => {\r\n        const errors = [];\r\n\r\n        if (schema[name] && Array.isArray(schema[name]) && schema[name].length > 0) {\r\n            for (let validator of schema[name]) {\r\n                if (!validator.callback(value, validator.params)) {\r\n                    errors.push(validator.message);\r\n                }\r\n            }\r\n\r\n            if (errors.length > 0) {\r\n                this.setState(prevState => ({\r\n                    errors: { ...prevState.errors, [name]: errors[0] }\r\n                }));\r\n            } else {\r\n                const { errors } = this.state;\r\n                delete errors[name];\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    _calcStep = () => {\r\n        const { activeStep, model, values, errors } = this.state;\r\n        model.stepCalculation(activeStep, values, errors, config);\r\n    };\r\n\r\n    _resetStepCalc = () => {\r\n        const { activeStep, model, values, errors } = this.state;\r\n        model.resetStepCalculation(activeStep, values, errors, config);\r\n    };\r\n\r\n    _setChartData = data => {\r\n        this.setState({ chartData: data });\r\n    };\r\n\r\n    _setCO2Result = value => {\r\n        this.setState({ CO2Result: value });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { isDesktop, activeStep, values, errors, touched, chartData, CO2Result, model } = this.state;\r\n        const { isEmailEnable } = this.props;\r\n        const { steps } = config;\r\n        const stepTotal = (model && model.stepTotal) ? formatNumber(model.stepTotal) : 0;\r\n\r\n        return <div\r\n            className={`CO2Calculator ${isDesktop ? config.desktopClass : config.mobileClass} step-${activeStep}`}\r\n            ref={this.containerRef}>\r\n            <div className='content-row'>\r\n                <div className={`content-col ${!isDesktop ? 'col-second col12' : 'col-first col4'}`}>\r\n                    {steps.length !== activeStep &&\r\n                    <Stepper className='Stepper' activeStep={activeStep} alternativeLabel={!isDesktop}\r\n                             orientation={isDesktop ? 'vertical' : 'horizontal'}>\r\n                        {steps.map((label, idx) => (\r\n                            <Step key={label}>\r\n                                {isDesktop && <StepLabel>{label}</StepLabel>}\r\n                                <StepLabel className='Index'>{`0${(idx + 1)}`}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>}\r\n                    {(!isDesktop && steps.length !== activeStep) &&\r\n                    <p className='Step__Label-Mobile'>{steps[activeStep]}</p>}\r\n                    {!isDesktop && <div className='CO2Calculator__Content'>\r\n                        <StepContentProvider stepIndex={activeStep}\r\n                                             isDesktop={isDesktop}\r\n                                             isEmailEnable={isEmailEnable}\r\n                                             onChange={this._onChange}\r\n                                             onBlur={this._onBlur}\r\n                                             values={values}\r\n                                             errors={errors}\r\n                                             touched={touched}\r\n                                             data={chartData}\r\n                                             CO2Result={CO2Result}\r\n                        />\r\n                    </div>}\r\n                </div>\r\n                <div className={`content-col ${!isDesktop ? 'col-first col12' : 'col-second col8'}`}>\r\n                    {steps.length !== activeStep && <div className='CO2Calculator__Title'>\r\n                        <h2>\r\n                            <div className='wrapper-one'>Calculate your CO2 footprint</div>\r\n                            <div className='wrapper-two'>\r\n                                <strong\r\n                                    className='CO2Calculator__Title__Label'>CO2</strong>\r\n                                &nbsp;<span\r\n                                className='CO2Calculator__Title__Value'>{stepTotal}</span>&nbsp;\r\n                                <small className='CO2Calculator__Title__Size'>kg/month</small>\r\n                            </div>\r\n                        </h2>\r\n                    </div>}\r\n                    {isDesktop && <div className='CO2Calculator__Content'>\r\n                        <StepContentProvider stepIndex={activeStep}\r\n                                             isDesktop={isDesktop}\r\n                                             isEmailEnable={isEmailEnable}\r\n                                             onChange={this._onChange}\r\n                                             onBlur={this._onBlur}\r\n                                             values={values}\r\n                                             errors={errors}\r\n                                             touched={touched}\r\n                                             data={chartData}\r\n                                             CO2Result={CO2Result}\r\n                        />\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <div className='content-row content-nav'>\r\n                <div className={`content-col ${!isDesktop ? 'dNone' : 'col4'}`}/>\r\n                <div className={`content-col ${!isDesktop ? 'col12' : 'col8'}`}>\r\n                    <StepNavigationProvider stepIndex={activeStep}\r\n                                            next={this._nextStep}\r\n                                            prev={this._prevStep}\r\n                                            set={this._setActiveStep}\r\n                                            isDesktop={isDesktop}\r\n                                            isEmailEnable={isEmailEnable}\r\n                                            calcStep={this._calcStep}\r\n                                            resetStepCalc={this._resetStepCalc}\r\n                                            values={values}\r\n                                            errors={errors}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nCO2Calculator.defaultProps = {\r\n    onChange: data => console.info(data),\r\n    isEmailEnable: false\r\n};\r\n\r\nCO2Calculator.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    isEmailEnable: PropTypes.bool\r\n};","import CO2Calculator from './CO2Calculator.js';\r\n\r\nexport default CO2Calculator;","import React from 'react';\nimport CO2Calculator from '../co2-calculator';\n\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <CO2Calculator isEmailEnable={true}/>\n        </div>\n    );\n}\n\nexport default App;\n","const AppConfig = {\r\n    // Custom Theme Configuration for Material UI - https://material-ui.com/ru/customization/theming/\r\n    materialUITheme: {\r\n        typography: {\r\n            fontFamily: [\r\n                '-apple-system',\r\n                'BlinkMacSystemFont',\r\n                '\"Segoe UI\"',\r\n                'Roboto',\r\n                'Helvetica Neue',\r\n                'Arial',\r\n                'sans-serif',\r\n                '\"Apple Color Emoji\"',\r\n                '\"Segoe UI Emoji\"',\r\n                '\"Segoe UI Symbol\"'\r\n            ].join(','),\r\n            h1: {\r\n                fontSize: '48px'\r\n            },\r\n            h2: {\r\n                fontSize: '30px'\r\n            },\r\n            h3: {\r\n                fontSize: '24px'\r\n            },\r\n            h4: {\r\n                fontSize: '17px'\r\n            },\r\n            h5: {\r\n                fontSize: '12px'\r\n            },\r\n            h6: {\r\n                fontSize: '10px'\r\n            }\r\n        },\r\n        palette: {\r\n            primary: {\r\n                dark: '#388873',\r\n                main: '#00C6A2',\r\n                light: '#C7FCEB',\r\n                contrastText: '#FFF'\r\n            },\r\n            secondary: {\r\n                dark: '#A28E5B',\r\n                main: '#EBC200',\r\n                light: '#FFEFCA',\r\n                contrastText: '#FFF'\r\n            },\r\n            error: {\r\n                dark: '#F8B0A3',\r\n                main: '#FF473C',\r\n                light: '#FFE5DB',\r\n                contrastText: '#FFF'\r\n            },\r\n            text: {\r\n                primary: '#545454',\r\n                secondary: \"rgba(84, 84, 84, 0.5)\"\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport { AppConfig };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport App from './components/app/App';\nimport { AppConfig } from './AppConfig';\n\nimport './style/index.scss';\n\n\nconst { materialUITheme } = AppConfig;\nconst theme = createMuiTheme(materialUITheme);\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App/>\n    </MuiThemeProvider>, document.getElementById('calculator'));\n"],"sourceRoot":""}